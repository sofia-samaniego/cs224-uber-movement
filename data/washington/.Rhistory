TP <- sum(pred*test$spam)
FP <- sum(pred*(1-test$spam))
TN <- sum((1-pred)*(1-test$spam))
FN <- sum((1-pred)*test$spam)
loss01[t] = (FP + FN) / (TP + FP + TN + FN)
}
thresholds[which(loss01 == min(loss01))]
loss01[which(loss01 == min(loss01))]
thresholds = seq(-10, 10)
TP = vector()
FP = vector()
TN = vector()
FN = vector()
for (t in 1:length(thresholds)) {
thresh = thresholds[t]
pred = aaply(as.matrix(test)[,1:48],1,function(x) {spamNB(x,thresh)})
TP <- sum(pred*test$spam)
FP <- sum(pred*(1-test$spam))
TN <- sum((1-pred)*(1-test$spam))
FN <- sum((1-pred)*test$spam)
loss01[t] = (FP + FN) / (TP + FP + TN + FN)
}
cat("The 0-1 loss is minimized at threshold value of",
thresholds[which(loss01 == min(loss01))], "\n")
cat("The 0-1 loss at this point is",
loss01[which(loss01 == min(loss01))])
spam.ind = train$spam == 1
q1 <- sapply(1:48, function(j) mean(train[spam.ind,j]))
q0 <- sapply(1:48, function(j) mean(train[!spam.ind,j]))
library(plyr)
library(faraway)
install.packages("faraway")
library(plyr)
library(faraway)
library(ggplot2)
data(orings)
df <- orings
df$pdamage <- df$damage/6
ggplot(df, aes(x=temp, y=pdamage)) + geom_point()
fm <- glm(cbind(damage, 6-damage)~temp, data=df, family="binomial")
p = predict(fm, data.frame(temp=c(31)), type="response")
p^6
set.seed(1)
mle = vector()
medianEst = vector()
for(iter in 1:5000){
sample = rexp(20, 0.1)
mle[iter] = 1 / mean(sample)
medianEst[iter] = log(2) / median(sample)
}
hist(mle, col=rgb(1,0,0,0.5), breaks = 50)
set.seed(1)
mle = vector()
medianEst = vector()
for(iter in 1:5000){
sample = rexp(20, 0.1)
mle[iter] = 1 / mean(sample)
medianEst[iter] = log(2) / median(sample)
}
hist(mle, col=rgb(1,0,0,0.5), breaks = 50)
hist(medianEst, col=rgb(0,0,1,0.5), add=T, breaks = 50)
box()
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) + geom_line(aes(x = rho, y = beta))
r
r
library(ggplot2)
ggplot(data = coeffs, aes(group = model, color = model)) + geom_line(aes(x = rho, y = beta))
View(coeffs)
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
print(cor(X,Z))
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
1 + pho
1 + rho
rho
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) + geom_line(aes(x = rho, y = beta))
library(ggplot2)
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) + geom_line(aes(x = rho, y = beta))
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_abline(aes(x = rho, y = 1 + rho, linetype = 4))
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_abline(aes(x = rho, y = 1 + rho) linetype = 4)
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_abline(aes(x = rho, y = 1 + rho), linetype = 4)
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho), linetype = 4)
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, legend = "1 + pho"), linetype = 4)
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, label= "1 + pho"), linetype = 4)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho), linetype = 4, label= "1 + pho")
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + pho"), linetype = 4)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + pho", color = "1 + pho"), linetype = 4)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4) +
theme(legend.title=element_blank())
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'beta fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'beta fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4) +
theme(legend.title=element_blank())
library(ggplot2)
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'coeff fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'coeff fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4) +
theme(legend.title=element_blank())
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4) +
geom_line(aes(x = rho, y = 1, group = "1", color = "1"), linetype = 4)
coeffs <- rbind(coeffs1, coeffs2)
library(ggplot2)
rho <- c(-0.5, -0.1, 0, 0.1, 0.5)
X <- rnorm(10000, 0, 1)
beta1 <- rep(0,5)
beta2 <- rep(0,5)
for (i in 1:5){
Z <- rho[i]*X + sqrt(1 - rho[i]^2)*rnorm(10000,0,1)
Y <- X + Z + rnorm(10000, 0, 1)
fm1 <- lm(Y  ~ 0 + X + Z)
beta1[i] <- fm1$coefficients[1]
fm2 <- lm(Y ~ 0 + X)
beta2[i] <- fm2$coefficients[1]
}
coeffs1 <- data.frame(rho = rho, beta = beta1, model = 'fm1')
coeffs2 <- data.frame(rho = rho, beta = beta2, model = 'fm2')
coeffs <- rbind(coeffs1, coeffs2)
ggplot(data = coeffs, aes(group = model, color = model)) +
geom_line(aes(x = rho, y = beta)) +
geom_line(aes(x = rho, y = 1 + rho, group = "1 + rho", color = "1 + rho"),
linetype = 4) +
geom_line(aes(x = rho, y = 1, group = "1", color = "1"), linetype = 4)
theme(legend.title=element_blank())
data(orings)
df <- orings
library(plyr)
library(faraway)
library(ggplot2)
data(orings)
df <- orings
df$pdamage <- df$damage/6
ggplot(df, aes(x=temp, y=pdamage)) + geom_point()
data(orings)
df <- orings
View(df)
help(orings)
fm <- glm(cbind(damage, 6-damage)~temp, data=df, family="binomial")
p = predict(fm, data.frame(temp=c(31)), type="response")
p
fm <- glm(damage~temp, data=df, family="binomial")
fm <- glm(pdamage~temp, data=df, family="binomial")
df$pdamage <- df$damage/6
fm <- glm(pdamage~temp, data=df, family="binomial")
fm <- glm(cbind(damage, 6-damage)~temp, data=df, family="binomial")
fm <- glm(damage~temp, data=df, family="binomial")
View(df)
?glm
fm <- glm(pdamage~temp, data=df, family="binomial")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(caretEnsemble)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(caretEnsemble)
library(C50)
?caret
??caret
? createFolds
? trainControl
data(churn)
str(churnTest)
? dotplot
?? dotplot
View(churnTest)
View(churnTrain)
summary(resamps, metric = "AUC")
model_list <- list(
glmnet <- glm.fit,
rf <- rf.fit
)
set.seed(23)
rf.fit <- train(
churn ~ .,
data = churnTrain,
metric = "ROC",
method = "ranger",
trControl = control
)
View(churnTest)
View(churnTrain)
read.csv('http://web.stanford.edu/class/msande226/spam.csv')
data(orings)
df <- orings
library(plyr)
library(faraway)
library(ggplot2)
data(orings)
df <- orings
df$pdamage <- df$damage/6
ggplot(df, aes(x=temp, y=pdamage)) + geom_point()
fm <- glm(cbind(damage, 6-damage)~temp, data=df, family="binomial")
p = predict(fm, data.frame(temp=c(31)), type="response")
cat("The probability of all O-rings failing is: ",p^6)
fm <- glm(cbind(damage, 6-damage)~temp, data=df, family="binomial")
p = predict(fm, data.frame(temp=c(31)), type="response")
p = predict(fm, data.frame(temp=c(31)))
exp(p)/(1 + exp(p))
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(ggplot2)
library(dplyr)
library(ellipse)
library(knitr)
library(pandocfilters)
set.seed(6160111)
mat <- data.frame(Z1 = c(-2, -1, 0, 1, 2), Y1 = c(5, 3, 4, 2, 1), Y2 = c(-3, -1, -1, 2, 3))
dat <- data.frame(Z1 = c(-2, -1, 0, 1, 2), Y1 = c(5, 3, 4, 2, 1), Y2 = c(-3, -1, -1, 2, 3))
print(dat)
lumber <- read.csv('Wichern_data/T7-7.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
setwd("~/Desktop/Stanford/Autumn 2017/STATS206")
pulp <- read.csv('Wichern_data/T7-7.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
View(pulp)
names(pulp) <- c("BL", "EM", "SF", "BS", "AFL", "LFF", "FFF", "ZST")
head(pulp)
dim(pulp)
setwd("~/Desktop/Stanford/Autumn 2017/STATS206")
pulp <- read.csv('Wichern_data/T7-7.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
names(pulp) <- c("y1:BL", "y2:EM", "y3:SF", "y4:BS", "z1:AFL", "z2:LFF", "z3:FFF", "z4:ZST")
head(pulp)
setwd("~/Desktop/Stanford/Autumn 2017/STATS206")
stocks <- read.csv('Wichern_data/T8-4.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
head(stocks)
names(stocks) <- c("JPMorgan", "Citibank", "WellsFargo", "RDShell", "ExxonMobil")
head(stocks)
setwd("~/Desktop/Stanford/Autumn 2017/STATS206")
pollution <- read.csv('Wichern_data/T1-5.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
head(pollution)
names(stocks) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7")
pollution <- read.csv('Wichern_data/T1-5.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
head(pollution)
names(pollution) <- c("X1", "X2", "X3", "X4", "X5", "X6", "X7")
head(pollution)
setwd("~/Desktop/Stanford/Autumn 2017/STATS206")
farm <- read.csv('Wichern_data/T8-7.DAT', sep = "",
header = FALSE,
stringsAsFactors = FALSE)
head(farm)
library(text2vec)
library(data.table)
library(glmnet)
data("movie_review")
setDT(movie_review)
setkey(movie_review, id)
set.seed(2017L)
all_ids = movie_review$id
train_ids = sample(all_ids, 4000)
test_ids = setdiff(all_ids, train_ids)
train = movie_review[J(train_ids)]
test = movie_review[J(test_ids)]
prep_fun = tolower
tok_fun = word_tokenizer
it_train = itoken(train$review,
preprocessor = prep_fun,
tokenizer = tok_fun,
ids = train$id)
vocab = create_vocabulary(it_train)
train_tokens = train$review %>%
prep_fun %>%
tok_fun
it_train = itoken(train_tokens,
ids = train$id,
# turn off progressbar because it won't look nice in rmd
progressbar = FALSE)
vocab = create_vocabulary(it_train)
vocab
vectorizer = vocab_vectorizer(vocab)
t1 = Sys.time()
dtm_train = create_dtm(it_train, vectorizer)
print(difftime(Sys.time(), t1, units = 'sec'))
dim(dtm_train)
head(as.matrix(dtm_train))
dim(dtm_train)
head(as.data.frame(as.matrix(dtm_train)))
library(text2vec)
library(data.table)
library(glmnet)
data("movie_review")
setDT(movie_review)
setkey(movie_review, id)
set.seed(2017L)
all_ids = movie_review$id
train_ids = sample(all_ids, 4000)
test_ids = setdiff(all_ids, train_ids)
train = movie_review[J(train_ids)]
test = movie_review[J(test_ids)]
prep_fun = tolower
tok_fun = word_tokenizer
it_train = itoken(train$review,
preprocessor = prep_fun,
tokenizer = tok_fun,
ids = train$id)
vocab = create_vocabulary(it_train)
train_tokens = train$review %>%
prep_fun %>%
tok_fun
it_train = itoken(train_tokens,
ids = train$id,
# turn off progressbar because it won't look nice in rmd
progressbar = FALSE)
vocab = create_vocabulary(it_train)
vocab
vectorizer = vocab_vectorizer(vocab)
t1 = Sys.time()
dtm_train = create_dtm(it_train, vectorizer)
print(difftime(Sys.time(), t1, units = 'sec'))
dim(dtm_train)
View(DataMatrix)
M <- as.data.frame(as.matrix(dtm_train))
View(M)
range(M$injections)
summary(M$injections)
summary(M$fashionable)
summary(M[,1:10])
summary(dtm_matrix$fashionable)
summary(dtm_tarin$fashionable)
summary(dtm_train$fashionable)
summary(dtm_train["fashionable"])
summary(dtm_train[,"fashionable"])
library(dplyr)
data <- read.csv('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/project/washington_DC-censustracts-2016-1-All-HourlyAggregate.csv')
save_graph <- function(hod){
write.csv(data %>% filter(hod == hod), paste("washington-2016-1", hod, sep = "_"))
return ()
}
save_graph(1)
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/project/)
;sl
s;v
a
//
v
ppsa
;
''
')
swd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/project/')
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/project/')
save_graph(1)
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/cs224w-uber-movement/data/')
for (h in 1:24){
save_graph(h)
}
data1 <- data %>% filter(hod == hod)
data1 <- data %>% filter(hod == 1)
data1 <- data %>% filter(hod == 1)
View(data1)
data <- data %>% filter(hod == 1)
write.csv(data, paste(paste("washington-2016-1", hod, sep = "_"),"csv",sep="."))
save_graph <- function(hod){
data <- data %>% filter(hod == 1)
write.csv(data, paste(paste("washington-2016-1", hod, sep = "_"),"csv",sep="."))
return ()
}
data <- read.csv('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/project/washington_DC-censustracts-2016-1-All-HourlyAggregate.csv')
save_graph <- function(h){
data <- data %>% filter(hod == h)
write.csv(data, paste(paste("washington-2016-1", h, sep = "_"),"csv",sep="."))
return ()
}
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/cs224w-uber-movement/data/')
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/cs224w-uber-movement/data/washington')
for (h in 1:24){
save_graph(h)
}
?write.csv
save_graph <- function(h){
data <- data %>% filter(hod == h)
write.csv(data, paste(paste("washington-2016-1", h, sep = "_"),"csv",sep="."), row.names = FALSE)
return ()
}
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/cs224w-uber-movement/data/washington')
for (h in 1:24){
save_graph(h)
}
save_graph <- function(h){
data <- data %>% filter(hod == h)
write.csv(data, paste(paste("washington-2016-1", h, sep = "_"),"csv",sep="."), row.names = FALSE, col.names = FALSE)
return ()
}
setwd('/Users/Sofia/Desktop/Stanford/Autumn\ 2017/CS224W/cs224w-uber-movement/data/washington')
for (h in 1:24){
save_graph(h)
}
